{"version":3,"sources":["components/projectList/index.tsx","components/toolbarItem/index.tsx","components/toolbar/index.tsx","common/constants.ts","components/portfolio/index.tsx","common/helpers.ts","pages/PortfolioPage/index.tsx","App.tsx","index.tsx"],"names":["ProjectList","projects","className","map","id","img","src","alt","ToolBarItem","filterName","selected","onSelectFilter","onClick","Toolbar","filters","filter","nanoid","FILTERS","Portfolio","useState","setSelected","projectsToRender","category","filterProjects","projectsWithIds","project","PortfolioPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAiBeA,EAVgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC7B,qBAAKC,UAAU,WAAf,SACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,IAAP,OACZ,8BACE,qBAAKH,UAAU,QAAQI,IAAKD,EAAKE,IAAI,oBAD7BH,SCcDI,EAf2B,SAAC,GAAD,IACxCC,EADwC,EACxCA,WACAC,EAFwC,EAExCA,SACAC,EAHwC,EAGxCA,eAHwC,OAKxC,qBACET,UACEQ,IAAaD,EAAa,uBAAyB,eAErDG,QAAS,kBAAMD,EAAeF,IAJhC,SAMGA,KCGUI,EAbmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,eAAtB,OAChC,qBAAKT,UAAU,UAAf,SACGY,EAAQX,KAAI,SAACY,GAAD,OACX,cAAC,EAAD,CAEEL,SAAUA,EACVD,WAAYM,EACZJ,eAAgBA,GAHXK,qBCZAC,EAAoB,CAC/B,MACA,WACA,UACA,kBC2BaC,EAtBc,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAC9B,EAAgCkB,mBAAiBF,EAAQ,IAAzD,mBAAOP,EAAP,KAAiBU,EAAjB,KAMMC,EACS,QAAbX,EAAqBT,ECjBK,SAC5BA,EACAc,GAF4B,OAI5Bd,EAASc,QAAO,qBAAGO,WAAyCP,KDa1BQ,CAAetB,EAAUS,GAE3D,OACE,sBAAKR,UAAU,YAAf,UACE,cAAC,EAAD,CACES,eAViB,SAACI,GACtBK,EAAYL,IAURL,SAAUA,EACVI,QAASG,IAEX,cAAC,EAAD,CAAahB,SAAUoB,QEtBvBG,EHGiC,CACrC,CACEnB,IACE,wGACFiB,SAAU,kBAEZ,CACEjB,IACE,wGACFiB,SAAU,YAEZ,CACEjB,IACE,6GACFiB,SAAU,YAEZ,CACEjB,IACE,gHACFiB,SAAU,YAEZ,CACEjB,IACE,iHACFiB,SAAU,kBAEZ,CACEjB,IACE,iHACFiB,SAAU,YAEZ,CACEjB,IACE,wGACFiB,SAAU,YAEZ,CACEjB,IACE,iHACFiB,SAAU,kBAEZ,CACEjB,IACE,mHACFiB,SAAU,YAEZ,CACEjB,IACE,mHACFiB,SAAU,WAEZ,CACEjB,IACE,sHACFiB,SAAU,YAEZ,CACEjB,IACE,wGACFiB,SAAU,kBAEZ,CACEjB,IACE,qHACFiB,SAAU,YAEZ,CACEjB,IACE,6GACFiB,SAAU,YAEZ,CACEjB,IACE,iHACFiB,SAAU,kBAEZ,CACEjB,IACE,uHACFiB,SAAU,YAEZ,CACEjB,IACE,mHACFiB,SAAU,YGvFmBnB,KAAI,SAACsB,GAAD,oBACnCrB,GAAIY,eACDS,MAOUC,EAJW,WACxB,OAAO,cAAC,EAAD,CAAWzB,SAAUuB,KCFfG,EANH,kBACV,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,OCFJ0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2ae33a62.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { ProjectType } from \"types\";\n\ninterface Props {\n  projects: ProjectType[];\n}\n\nconst ProjectList: FC<Props> = ({ projects }) => (\n  <div className=\"projects\">\n    {projects.map(({ id, img }: ProjectType) => (\n      <div key={id}>\n        <img className=\"image\" src={img} alt=\"portfolio item\" />\n      </div>\n    ))}\n  </div>\n);\n\nexport default ProjectList;\n","/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/no-static-element-interactions */\nimport React, { FC } from 'react';\n\ntype ToolBarItemProps = {\n  filterName: string,\n  selected: string,\n  onSelectFilter: (filter: string) => void,\n};\n\nconst ToolBarItem: FC<ToolBarItemProps> = ({\n  filterName,\n  selected,\n  onSelectFilter,\n}) => (\n  <div\n    className={\n      selected === filterName ? 'toolbar-item__active' : 'toolbar-item'\n    }\n    onClick={() => onSelectFilter(filterName)}\n  >\n    {filterName}\n  </div>\n);\n\nexport default ToolBarItem;\n","import React, { FC } from 'react';\nimport { nanoid } from 'nanoid';\nimport ToolBarItem from '../toolbarItem';\n\ninterface ToolbarProps {\n  filters: string[];\n  selected: string;\n  onSelectFilter: (filter: string) => void;\n}\n\nconst Toolbar: FC<ToolbarProps> = ({ filters, selected, onSelectFilter }) => (\n  <div className=\"filters\">\n    {filters.map((filter: string) => (\n      <ToolBarItem\n        key={nanoid()}\n        selected={selected}\n        filterName={filter}\n        onSelectFilter={onSelectFilter}\n      />\n    ))}\n  </div>\n);\n\nexport default Toolbar;\n","import { ProjectType } from '../types';\n\nexport const FILTERS: string[] = [\n  'All',\n  'Websites',\n  'Flayers',\n  'Business Cards',\n];\n\nexport const PROJECTS: ProjectType[] = [\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/mon.jpg',\n    category: 'Business Cards',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/200.jpg',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/emi_haze.jpg',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/codystretch.jpg',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/Triangle_003.jpg',\n    category: 'Business Cards',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/place200x290.png',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/200.jpg',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/transmission.jpg',\n    category: 'Business Cards',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/place200x290_1.png',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/place200x290_2.png',\n    category: 'Flayers',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/the_ninetys_brand.jpg',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/dia.jpg',\n    category: 'Business Cards',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/Triangle_350x197.jpg',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/emi_haze.jpg',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/transmission.jpg',\n    category: 'Business Cards',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/Triangle_350x197_1.jpg',\n    category: 'Websites',\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/place200x290_3.png',\n    category: 'Flayers',\n  },\n];\n","import React, { FC, useState } from \"react\";\nimport ProjectList from \"../projectList\";\nimport Toolbar from \"../toolbar\";\nimport { filterProjects } from \"common/helpers\";\nimport { FILTERS } from \"common/constants\";\nimport { ProjectType } from \"types\";\n\ninterface Props {\n  projects: ProjectType[];\n}\n\nconst Portfolio: FC<Props> = ({ projects }) => {\n  const [selected, setSelected] = useState<string>(FILTERS[0]);\n\n  const onSelectFilter = (filter: string): void => {\n    setSelected(filter);\n  };\n\n  const projectsToRender: ProjectType[] =\n    selected === \"All\" ? projects : filterProjects(projects, selected);\n\n  return (\n    <div className=\"container\">\n      <Toolbar\n        onSelectFilter={onSelectFilter}\n        selected={selected}\n        filters={FILTERS}\n      />\n      <ProjectList projects={projectsToRender} />\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import { ProjectType } from 'types';\n\nexport const filterProjects = (\n  projects: ProjectType[],\n  filter: string\n): ProjectType[] =>\n  projects.filter(({ category }: ProjectType) => category === filter);\n","import React, { FC } from 'react';\nimport { nanoid } from 'nanoid';\nimport Portfolio from 'components/portfolio';\nimport { PROJECTS } from 'common/constants';\nimport { ProjectType } from 'types';\n\nconst projectsWithIds = PROJECTS.map((project: ProjectType) => ({\n  id: nanoid(),\n  ...project,\n}));\n\nconst PortfolioPage: FC = () => {\n  return <Portfolio projects={projectsWithIds} />;\n};\n\nexport default PortfolioPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport PortfolioPage from \"pages/PortfolioPage\";\n\nconst App = () => (\n  <div className=\"App\">\n    <PortfolioPage />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}